function VanillaLib(){let self=Object.create({});return self.mapFlat=((array,func)=>array.map(x=>func(x)).reduce((a,b)=>a.concat(b))),self.parenth=((elem,nth)=>traverse(elem,self.ifndef(nth,1),0)),self.ifndef=((expr,value)=>self.ndef(expr)?value:expr),self.ispojo=(expr=>self.isobj(expr,Object)),self.export=((source,target,members)=>Object.keys(source).filter(key=>!members||members.includes(key)).forEach(key=>target[key]=source[key])),self.ifnan=((expr,value)=>isNaN(expr)?value:expr),self.isobj=((expr,type)=>"object"==typeof expr&&(!type||self.isfn(expr.constructor)&&type===(self.isfn(type)?expr.constructor:expr.constructor.name))),self.isarr=(expr=>self.isobj(expr,Array)),self.isstr=(expr=>"string"==typeof expr),self.isfn=(expr=>"function"==typeof expr),self.ndef=(expr=>void 0===expr),self.test=((expr,func,other)=>expr?func(expr):self.isfn(other)?other(expr):other),self.fire=((elem,event,args)=>elem.dispatchEvent(self.isobj(event)?even:new Event(event,self.ifndef(args,{bubbles:!0,cancelable:!0})))),self.warn=console.warn,self.log=console.debug,self.on=((elem,event,func)=>elem.addEventListener(event,func)),self.$$=((sel,elem)=>Array.slice((elem||document).querySelectorAll(sel))),self.$=((sel,elem)=>(elem||document).querySelector(sel)),self.aggRate=((amount,rate,periods)=>periods?self.aggRate(amount*rate,rate,periods-1):amount),self.toDec=(expr=>Math.round(100*parseFloat((expr+"").replace(/\$|,/g,"")))/100),self.appendTo=function(element,parent,reference){return reference&&(parent=reference.parentNode,reference=reference.nextSibling),reference?self.prependTo(element,parent,reference):(parent?parent.append(element):self.warn("*** appendTo() could not add element: No parent or reference element provided"),element)},self.attr=function(elem,name,value){return self.isarr(elem)?elem.map(el=>self.attr(el,name,value)):(self.keysAndValues(name,value,(n,v)=>null===v?elem.removeAttribute(n):elem.setAttribute(n,v)),elem)},self.create=function(html,containerType){let container=null,result=null,attrs,style;return self.isobj(containerType)&&(attrs=containerType.attrs,style=containerType.style,containerType=containerType.container),containerType=containerType||"div",create[containerType]=container=create[containerType]||document.createElement(containerType),container.innerHTML=html,result=Array.slice(container.childNodes).map(elem=>(elem.remove(),elem)),attrs&&self.attr(result,attrs),style&&self.css(result,style),1==result.length&&(result=result[0]),result},self.css=function(element,key,value){return isarr(element)?element.map(el=>css(el,key,value)):(keysAndValues(key,value,(k,v)=>element.style[k]=v),element)},self.keysAndValues=function(key,value,action){return self.isobj(key)&&!value?Object.keys(key).map(k=>action(k,key[k])):self.isarr(key)?self.isarr(value)&&key.length===value.length?key.map((k,i)=>action(k,value[i])):key.map(k=>action(k,value)):action(key,value)},self.prependTo=function(element,parent,reference){return!reference&&parent&&(reference=parent.childNodes[0]),reference?reference.parentNode.insertBefore(element,reference):parent?parent.append(element):self.warn("*** prependTo() could not add element: No parent or reference element provided"),element},self.toDec2=function(amount){if(amount=self.toDec(amount),isNaN(amount))return null;let segs=(amount+"").split(".");return segs[0]+"."+((segs[1]||0)+"0").slice(0,2)},self.toMoney=function(amount){let dec2=self.toDec2(amount);return isNaN(dec2)?null:dec2<0?"-$ "+-dec2:"$ "+dec2},self.traverse=function(elem,up,sideways,elementsOnly,lastIfNull){let last=elem;for(;elem&&up-- >0;)last=elem,elem=elem.parentNode;let prop=(elementsOnly?"Element":"")+"Sibling";if(sideways<0)for(;elem&&sideways++<0;)last=elem,elem=elem["previous"+prop];else if(sideways>0)for(;elem&&sideways-- >0;)last=elem,elem=elem["next"+prop];return lastIfNull?elem||last:elem},self.copyMembers=function(source,target,members,preserve){if(!self.isobj(source)||!self.isobj(target))return self.warn("=> Cannot copy from/to non-objects"),!1;let names=Object.keys(source);return preserve=!!self.isobj(preserve)&&preserve,self.isstr(members)&&(members=members.split(",").map(nm=>nm.trim())),self.isarr(members)?names=names.filter(nm=>members.includes(nm)):self.isfn(members)&&(names=names.filter(members)),names.forEach(nm=>{target[nm]&&preserve&&(preserve[nm]=target[nm]),target[nm]=source[nm]}),preserve||target},self.export=function(scope,members,overwriten){return!!scope&&self.copyMembers(this,scope,members,overwriten)},self}